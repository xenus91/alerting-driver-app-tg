import { NextResponse } from "next/server"
import { deleteTelegramCommands, setTelegramCommands } from "@/lib/telegram-commands"

export async function POST() {
  try {
    console.log("üîÑ FORCE REFRESH: Starting complete commands refresh...")

    // 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –≤—Å–µ—Ö –æ–±–ª–∞—Å—Ç–µ–π
    console.log("Step 1: Deleting all commands from all scopes...")
    await deleteTelegramCommands()

    // 2. –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    console.log("Step 2: Waiting for Telegram to process deletion...")
    await new Promise((resolve) => setTimeout(resolve, 2000))

    // 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∑–∞–Ω–æ–≤–æ
    console.log("Step 3: Setting commands for all scopes...")
    const result = await setTelegramCommands()

    // 4. –ï—â–µ –æ–¥–Ω–∞ –ø–∞—É–∑–∞
    console.log("Step 4: Final wait for cache refresh...")
    await new Promise((resolve) => setTimeout(resolve, 1000))

    console.log("‚úÖ FORCE REFRESH: Complete!")

    return NextResponse.json({
      success: true,
      message: "–ö–æ–º–∞–Ω–¥—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö –æ–±–ª–∞—Å—Ç–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram.",
      result: result,
      steps: [
        "–£–¥–∞–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –∏–∑ –≤—Å–µ—Ö –æ–±–ª–∞—Å—Ç–µ–π",
        "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –¥–ª—è default scope",
        "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –¥–ª—è private chats",
        "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram",
      ],
    })
  } catch (error) {
    console.error("‚ùå Error in force refresh:", error)

    return NextResponse.json(
      {
        success: false,
        error: error instanceof Error ? error.message : "Unknown error",
      },
      { status: 500 },
    )
  }
}
